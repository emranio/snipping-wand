{"version":3,"file":"preload.js","mappings":";;;;;;;;;;AAAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNAA,MAAM,CAACC,gBAAP,CAAwB,kBAAxB,EAA4C,MAAM;EAC9C,MAAMC,WAAW,GAAG,CAACC,QAAD,EAAWC,IAAX,KAAoB;IACtC,MAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwBJ,QAAxB,CAAhB;IACA,IAAIE,OAAJ,EAAaA,OAAO,CAACG,SAAR,GAAoBJ,IAApB;EACd,CAHD;;EAKA,KAAK,MAAMK,IAAX,IAAmB,CAAC,QAAD,EAAW,MAAX,EAAmB,UAAnB,CAAnB,EAAmD;IACjDP,WAAW,CAAE,GAAEO,IAAK,UAAT,EAAoBC,OAAO,CAACC,QAAR,CAAiBF,IAAjB,CAApB,CAAX;EACD;AACF,CATH,GAWA;;AACA;AAEAG,oDAAA,CAAe,YAAf,EAA6B,OAAOE,KAAP,EAAcC,QAAd,KAA2B;EACtDC,OAAO,CAACC,GAAR,CAAYF,QAAZ;;EACA,IAAI;IACF,MAAMG,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC;MACvDC,KAAK,EAAE,KADgD;MAEvDC,KAAK,EAAE;QACLC,SAAS,EAAE;UACTC,iBAAiB,EAAE,SADV;UAETC,mBAAmB,EAAEX,QAFZ,CAGT;UACA;UACA;UACA;;QANS;MADN;IAFgD,CAApC,CAArB;IAaAY,YAAY,CAACT,MAAD,CAAZ;EACD,CAfD,CAeE,OAAOU,CAAP,EAAU;IACVC,WAAW,CAACD,CAAD,CAAX;EACD;AACF,CApBD;;AAsBA,SAASD,YAAT,CAAuBT,MAAvB,EAA+B;EAC7B,MAAMK,KAAK,GAAGjB,QAAQ,CAACwB,aAAT,CAAuB,OAAvB,CAAd;EACAP,KAAK,CAACQ,SAAN,GAAkBb,MAAlB;;EACAK,KAAK,CAACS,gBAAN,GAA0BJ,CAAD,IAAOL,KAAK,CAACU,IAAN,EAAhC;AACD;;AAED,SAASJ,WAAT,CAAsBD,CAAtB,EAAyB;EACvBZ,OAAO,CAACC,GAAR,CAAYW,CAAZ;AACD,C","sources":["webpack://snipping-wand/external commonjs \"electron\"","webpack://snipping-wand/webpack/bootstrap","webpack://snipping-wand/webpack/runtime/compat get default export","webpack://snipping-wand/webpack/runtime/define property getters","webpack://snipping-wand/webpack/runtime/hasOwnProperty shorthand","webpack://snipping-wand/webpack/runtime/make namespace object","webpack://snipping-wand/./src/Electron/Preload.js"],"sourcesContent":["module.exports = require(\"electron\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","window.addEventListener('DOMContentLoaded', () => {\n    const replaceText = (selector, text) => {\n      const element = document.getElementById(selector)\n      if (element) element.innerText = text\n    }\n  \n    for (const type of ['chrome', 'node', 'electron']) {\n      replaceText(`${type}-version`, process.versions[type])\n    }\n  })\n\n// In the preload script.\nimport { ipcRenderer } from 'electron'\n\nipcRenderer.on('SET_SOURCE', async (event, sourceId) => {\n  console.log(sourceId)\n  try {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: false,\n      video: {\n        mandatory: {\n          chromeMediaSource: 'desktop',\n          chromeMediaSourceId: sourceId,\n          // minWidth: 1280,\n          // maxWidth: 1280,\n          // minHeight: 720,\n          // maxHeight: 720\n        }\n      }\n    })\n    handleStream(stream)\n  } catch (e) {\n    handleError(e)\n  }\n})\n\nfunction handleStream (stream) {\n  const video = document.querySelector('video')\n  video.srcObject = stream\n  video.onloadedmetadata = (e) => video.play()\n}\n\nfunction handleError (e) {\n  console.log(e)\n}"],"names":["window","addEventListener","replaceText","selector","text","element","document","getElementById","innerText","type","process","versions","ipcRenderer","on","event","sourceId","console","log","stream","navigator","mediaDevices","getUserMedia","audio","video","mandatory","chromeMediaSource","chromeMediaSourceId","handleStream","e","handleError","querySelector","srcObject","onloadedmetadata","play"],"sourceRoot":""}