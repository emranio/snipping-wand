{"version":3,"file":"main.js","mappings":";;;;;;;;;;AAAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;ACNA;AACA;AACA,IAAIK,GAAJ;AAEAL,kEAAA,CAA6B,kBAA7B,EAAiD,uCAAjD;;AAEA,SAASQ,YAAT,GAAwB;EACtB,IAAIC,cAAc,GAAGP,8DAAA,EAArB;EACAS,OAAO,CAACC,GAAR,CAAYV,2DAAA,EAAZ;EAEAG,GAAG,GAAG,IAAIJ,mDAAJ,CAAkB;IACtBa,KAAK,EAAEL,cAAc,CAACM,IAAf,CAAoBD,KADL;IAEtBE,MAAM,EAAEP,cAAc,CAACM,IAAf,CAAoBD,KAFN;IAGtB;IACA;IACA;IACA;IACA;IACAG,IAAI,EAAE,KARgB;IAStB;IACAC,WAAW,EAAE,IAVS;IAWtBC,KAAK,EAAE,KAXe;IAYtB;IACAC,SAAS,EAAE,IAbW;IActBC,gBAAgB,EAAE,IAdI;IAetBC,cAAc,EAAE;MACdC,OAAO,EAAEnB,gDAAA,CAAUqB,SAAV,EAAqB,YAArB;IADK;EAfM,CAAlB,CAAN;EAoBApB,GAAG,CAACqB,QAAJ,CAAatB,gDAAA,CAAUqB,SAAV,EAAqB,YAArB,CAAb,EAxBsB,CA0BtB;EACA;EACA;;EACApB,GAAG,CAACsB,oBAAJ,CAAyB,IAAzB,EAA+B;IAAEC,OAAO,EAAE;EAAX,CAA/B;EACAvB,GAAG,CAACwB,oBAAJ,CAAyB,IAAzB,EA9BsB,CAgCtB;EACA;EAGA;;EAEA1B,gEAAA,CAA2B;IAAE4B,KAAK,EAAE,CAAC,QAAD,EAAW,QAAX;EAAT,CAA3B,EAA4DC,IAA5D,CAAiE,MAAMC,OAAN,IAAiB;IAChF,KAAK,MAAMC,MAAX,IAAqBD,OAArB,EAA8B;MAC5BtB,OAAO,CAACC,GAAR,CAAYsB,MAAZ;;MACA,IAAIA,MAAM,CAACC,IAAP,KAAgB,eAApB,EAAqC;QACnC9B,GAAG,CAAC+B,WAAJ,CAAgBC,IAAhB,CAAqB,YAArB,EAAmCH,MAAM,CAACI,EAA1C;QACA;MACD;IACF;EACF,CARD;EAUAjC,GAAG,CAACY,IAAJ,CAAS,IAAT;AACD;;AAEDjB,mDAAA,GAAgBgC,IAAhB,CAAqB,MAAM;EACzBxB,YAAY,GADa,CAGzB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAR,4CAAA,CAAO,UAAP,EAAmB,MAAM;IACvB,IAAIC,iEAAA,GAA8ByC,MAA9B,KAAyC,CAA7C,EAAgD;MAC9ClC,YAAY;IACb;EACF,CAJD;AAKD,CApBD;AAsBAR,4CAAA,CAAO,mBAAP,EAA4B,MAAM;EAChC,IAAI2C,OAAO,CAACC,QAAR,KAAqB,QAAzB,EAAmC;IACjC5C,8CAAA;EACD;AACF,CAJD,E","sources":["webpack://snipping-wand/external commonjs \"electron\"","webpack://snipping-wand/external node-commonjs \"path\"","webpack://snipping-wand/webpack/bootstrap","webpack://snipping-wand/webpack/runtime/compat get default export","webpack://snipping-wand/webpack/runtime/define property getters","webpack://snipping-wand/webpack/runtime/hasOwnProperty shorthand","webpack://snipping-wand/webpack/runtime/make namespace object","webpack://snipping-wand/./src/Electron/Main.js"],"sourcesContent":["module.exports = require(\"electron\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { app, BrowserWindow, screen, desktopCapturer } from 'electron'\nimport path from 'path'\nvar win;\n\napp.commandLine.appendSwitch('disable-features', 'IOSurfaceCapturer,DesktopCaptureMacV2')\n\nfunction createWindow() {\n  let primaryDisplay = screen.getPrimaryDisplay();\n  console.log(screen.getAllDisplays());\n\n  win = new BrowserWindow({\n    width: primaryDisplay.size.width,\n    height: primaryDisplay.size.width,\n    // width: 200,\n    // height:200,\n    // skipTaskbar: true,\n    // transparent: true,\n    // fullscreen: true,\n    show: false,\n    // contentProtection: true,\n    alwaysOnTop: true,\n    frame: false,\n    // opacity: 0.5,\n    focusable: true,\n    acceptFirstMouse: true,\n    webPreferences: {\n      preload: path.join(__dirname, 'preload.js')\n    }\n  })\n\n  win.loadFile(path.join(__dirname, 'index.html'))\n\n  // win.setBackgroundColor('#aaa');\n  // win.setFullScreen(true);\n  // win.setKiosk(true);\n  win.setIgnoreMouseEvents(true, { forward: false });\n  win.setContentProtection(true);\n\n  // var monitorWidth = screen.width;\n  // var monitorHeight = screen.height;\n\n\n  // win.openDevTools();\n\n  desktopCapturer.getSources({ types: ['window', 'screen'] }).then(async sources => {\n    for (const source of sources) {\n      console.log(source)\n      if (source.name === 'Entire screen') {\n        win.webContents.send('SET_SOURCE', source.id)\n        return\n      }\n    }\n  })\n\n  win.show(true);\n}\n\napp.whenReady().then(() => {\n  createWindow()\n\n  // setTimeout(() => {\n  //   desktopCapturer.getSources({ types: ['window', 'screen'] }).then(async sources => {\n  //     for (const source of sources) {\n  //       console.log(source)\n  //       if (source.name === 'Entire screen') {\n  //         win.webContents.send('SET_SOURCE', source.id)\n  //         return\n  //       }\n  //     }\n  //   })  \n  // }, 2000)\n\n  app.on('activate', () => {\n    if (BrowserWindow.getAllWindows().length === 0) {\n      createWindow()\n    }\n  })\n})\n\napp.on('window-all-closed', () => {\n  if (process.platform !== 'darwin') {\n    app.quit()\n  }\n})\n"],"names":["app","BrowserWindow","screen","desktopCapturer","path","win","commandLine","appendSwitch","createWindow","primaryDisplay","getPrimaryDisplay","console","log","getAllDisplays","width","size","height","show","alwaysOnTop","frame","focusable","acceptFirstMouse","webPreferences","preload","join","__dirname","loadFile","setIgnoreMouseEvents","forward","setContentProtection","getSources","types","then","sources","source","name","webContents","send","id","whenReady","on","getAllWindows","length","process","platform","quit"],"sourceRoot":""}